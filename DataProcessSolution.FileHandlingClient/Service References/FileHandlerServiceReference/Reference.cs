//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataProcessSolution.FileHandlingClient.FileHandlerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessedFile", Namespace="http://schemas.datacontract.org/2004/07/DataProcessSolution.FileHandlingService")]
    [System.SerializableAttribute()]
    public partial class ProcessedFile : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlobReferenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlobReference {
            get {
                return this.BlobReferenceField;
            }
            set {
                if ((object.ReferenceEquals(this.BlobReferenceField, value) != true)) {
                    this.BlobReferenceField = value;
                    this.RaisePropertyChanged("BlobReference");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileHandlerServiceReference.IFileHandlerService")]
    public interface IFileHandlerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileHandlerService/ProcessFile", ReplyAction="http://tempuri.org/IFileHandlerService/ProcessFileResponse")]
        string ProcessFile(DataProcessSolution.FileHandlingClient.FileHandlerServiceReference.ProcessedFile processedFile);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileHandlerService/ProcessFile", ReplyAction="http://tempuri.org/IFileHandlerService/ProcessFileResponse")]
        System.Threading.Tasks.Task<string> ProcessFileAsync(DataProcessSolution.FileHandlingClient.FileHandlerServiceReference.ProcessedFile processedFile);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileHandlerServiceChannel : DataProcessSolution.FileHandlingClient.FileHandlerServiceReference.IFileHandlerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileHandlerServiceClient : System.ServiceModel.ClientBase<DataProcessSolution.FileHandlingClient.FileHandlerServiceReference.IFileHandlerService>, DataProcessSolution.FileHandlingClient.FileHandlerServiceReference.IFileHandlerService {
        
        public FileHandlerServiceClient() {
        }
        
        public FileHandlerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileHandlerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileHandlerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileHandlerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string ProcessFile(DataProcessSolution.FileHandlingClient.FileHandlerServiceReference.ProcessedFile processedFile) {
            return base.Channel.ProcessFile(processedFile);
        }
        
        public System.Threading.Tasks.Task<string> ProcessFileAsync(DataProcessSolution.FileHandlingClient.FileHandlerServiceReference.ProcessedFile processedFile) {
            return base.Channel.ProcessFileAsync(processedFile);
        }
    }
}
